;主引导程序 -- Show "Frank MBR."
;mbr.S 调用BIOS 10H号中断
;显示Frank MBR
;---------------------

;vstart作用是告诉编译器，把我的起始地址编为0x7c00
SECTION MBR vstart=0x7c00 ;程序开始的地址
    mov ax, cs            ;使用cs初始化其他的寄存器
    mov ds, ax            ;因为是通过jmp 0:0x7c00到的MBR开始地址
    mov es, ax            ;所以此时的cs为0,也就是用0初始化其他寄存器
    mov ss, ax            ;此类的寄存器不同通过立即数赋值，采用ax中转
    mov fs, ax
    mov sp, 0x7c00  	  ;初始化栈指针

;清屏利用0x10中断的0x6号功能
;清屏(向上滚动窗口)
;AH=06H,AL=上滚行数(0表示全部)
;BH=上卷行属性
;(CL,CH)=窗口左上角坐标，(DL,DH)=窗口右下角
;------------------------
    mov ax, 0x600
    mov bx, 0x700
    mov cx, 0			;左上角(0,0)
    mov dx, 0x184f		;右下角(79,24),
                     	;VGA文本模式中一行80个字符，共25行

    int 0x10

;获取光标位置
;---------------------
    mov ah, 3   ; 3号子功能获取光标位置
    mov bh, 1   ; bh寄存器存储带获取光标位置的页号,从0开始，此处填1可以看成将光标移动到最开始
    int 0x10

;打印字符串
;AH=13H 写字符串
;AL=写模式,BH=页码,BL=颜色,CX=字符串长度,DH=行,DL=列,ES:BP=字符串偏移量
;-------------------------------
    mov ax, message
    mov bp, ax

    mov cx, 10    		;字符串长度，不包括'\0'
    mov ax, 0x1301
    mov bx, 0x2			;前景色：绿，背景色：黑

    int 0x10

;------------------------------
    jmp $
    message db "Frank MBR."
    times 510-($-$$) db 0	;$表示当前指令的地址，$$表示程序的起始地址(也就是最开始的7c00)，
    ;所以$-$$就等于本条指令之前的所有字节数。
    ;510-($-$$)的效果就是，填充了这些0之后，从程序开始到最后一个0，一共是510个字节。
    db 0x55, 0xaa			;再加2个字节，刚好512B，占满一个扇区
